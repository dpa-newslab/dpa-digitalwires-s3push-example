# -*- coding: utf-8 -*-
#
# Copyright 2022, 2022 dpa-IT Services GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

service: ${self:custom.global_resource_prefix}-${self:custom.component_name}

custom:
  component_name: dpa-s3push-receive-transformed  # CHANGE THIS!
  global_resource_prefix: ${file(../base_resources/serverless.yml):custom.global_resource_prefix}
  description: "Setup sqs to receive transformed dpa content"

  sns_s3push_transformed_topic_name: ${file(../preprocess/serverless.yml):custom.sns_s3push_transformed_topic_name}
  sqs_transformed_name: ${self:custom.global_resource_prefix}-s3push-transformed-sqs.fifo

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}  # CHANGE THIS!
  region: eu-central-1
  # TODO: create deployment bucket or comment the deploymentBucket with results in a default deployment bucket
  # aws s3api create-bucket --bucket <deploymentBucketName> --region eu-central-1 --create-bucket-configuration LocationConstraint=eu-central-1
  deploymentBucket: serverless-deployments-${self:provider.region}-${env:USER,"someUser"}  # CHANGE THIS!
  logRetentionInDays: 14

resources:
  Description: "${self:custom.description}"
  Resources:
    S3PushTransformedQueue:
      Type: AWS::SQS::Queue
      Properties:
        FifoQueue: true
        DelaySeconds: 0
        MaximumMessageSize: 262144
        MessageRetentionPeriod: 864000
        QueueName: ${self:custom.sqs_transformed_name}
        ReceiveMessageWaitTimeSeconds: 0
        VisibilityTimeout: 60

    SnsToSqsTransformedSubscription:
        Type: AWS::SNS::Subscription
        Properties:
            TopicArn: {"Fn::Join": ["", ["arn:aws:sns:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":${self:custom.sns_s3push_transformed_topic_name}"]]}
            Endpoint:
                Fn::GetAtt: [S3PushTransformedQueue, Arn]
            Protocol: sqs
            RawMessageDelivery: true

    # Policy allows SNS to publish to this SQS queue
    TransformedSnsToSqsPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "Allow SNS publish to SQS"
              Effect: Allow
              Principal: 
                Service: "sns.amazonaws.com"
              Resource: {"Fn::Join": ["", ["arn:aws:sqs:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":${self:custom.sqs_transformed_name}"]]}
              Action: SQS:SendMessage
              Condition:
                ArnEquals:
                  aws:SourceArn: {"Fn::Join": ["", ["arn:aws:sns:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":${self:custom.sns_s3push_transformed_topic_name}"]]}
        Queues:
          - Ref: S3PushTransformedQueue

  Outputs:
    S3PushTransformedQueueUrl:
      Value: {"Ref": "S3PushTransformedQueue"}

package:
  exclude:
    - "*"
    - "**/*"
  include:
    - "!**/*~"
