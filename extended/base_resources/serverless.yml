# -*- coding: utf-8 -*-
#
# Copyright 2022, 2022 dpa-IT Services GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

service: ${self:custom.global_resource_prefix}-${self:custom.component_name}

custom:
  component_name:           dpa-s3push-receive-base-resources  # CHANGE THIS!
  global_resource_prefix:   test  # CHANGE THIS!
  description:              "Setup S3 bucket to receive dpa content"

  ####
  #### Please set bucket name and prefix (IMPORTANT: lowercase only, no leading and trailing slashes)
  ####
  s3_bucket_name: ${self:custom.global_resource_prefix}-dpa-s3push-incoming-mycompany-com # CHANGE THIS!
  s3_prefix_in: prefix # CHANGE THIS!

  sns_s3push_incoming_topic_name: ${self:custom.global_resource_prefix}-dpa-s3push-incoming-sns  # CHANGE THIS!

provider:
  name:               aws
  runtime:            python3.8
  stage:              ${opt:stage, 'dev'}  # CHANGE THIS!
  region:             eu-central-1
  # TODO: create deployment bucket or comment the deploymentBucket with results in a default deployment bucket
  # aws s3api create-bucket --bucket <deploymentBucketName> --region eu-central-1 --create-bucket-configuration LocationConstraint=eu-central-1
  deploymentBucket:   serverless-deployments-${self:provider.region}-${env:USER,"someUser"}  # CHANGE THIS!
  logRetentionInDays: 14

resources:
  Description: ${self:custom.description}
  Resources:
    # Users
    S3PushAccessKey:
      Type: AWS::IAM::AccessKey
      Properties:
        UserName: {"Ref": "S3PushUser"}
    S3PushUser:
      Type: AWS::IAM::User
      Properties:
        Path: "/"
        Policies:
        - PolicyName: S3PushUserAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: "Allow"
              Action:
                - "s3:GetObject"
                - "s3:PutObject"
              Resource: "arn:aws:s3:::${self:custom.s3_bucket_name}/${self:custom.s3_prefix_in}/*"
            - Effect: "Allow"
              Action:
                - "s3:GetBucketLocation"
              Resource: "arn:aws:s3:::${self:custom.s3_bucket_name}"
            - Effect: "Allow"
              Action: "s3:ListBucket"
              Condition: 
                StringLike: 
                  "s3:prefix": "${self:custom.s3_prefix_in}/*"
              Resource: "arn:aws:s3:::${self:custom.s3_bucket_name}"

    # S3 bucket
    S3PushBucket:
      Type: AWS::S3::Bucket
      DependsOn:
        - S3PushIncomingTopic
        - S3PushIncomingTopicPolicy
      DeletionPolicy: Retain
      Properties:
        BucketName: ${self:custom.s3_bucket_name}
        AccessControl: Private
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          IgnorePublicAcls: true
          BlockPublicPolicy: true
          RestrictPublicBuckets: true
        VersioningConfiguration:
          Status: Enabled
        LifecycleConfiguration:
          Rules:
            - Id: delete-incoming-after-30-days 
              ExpirationInDays: 30
              Prefix: ${self:custom.s3_prefix_in}/
              Status: Enabled
        CorsConfiguration:
          CorsRules:
            -
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - HEAD
              MaxAge: 3000
        NotificationConfiguration:
          TopicConfigurations:
            - Event: s3:ObjectCreated:*
              Filter:
                S3Key:
                  Rules:
                    - Name: Prefix
                      Value: ${self:custom.s3_prefix_in}
                    - Name: Suffix
                      Value: .json
              Topic:
                Ref: S3PushIncomingTopic

    # topic for incoming dpa content (.json)
    S3PushIncomingTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.sns_s3push_incoming_topic_name}

    S3PushIncomingTopicPolicy:
      Type: AWS::SNS::TopicPolicy
      Properties:
        Topics:
        - Ref: S3PushIncomingTopic
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: AllowS3PushBucketToPublishToQueue
            Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sns:Publish
            Resource:
              Ref: S3PushIncomingTopic
            Condition:
              ArnLike:
                "aws:SourceArn": "arn:aws:s3:*:*:${self:custom.s3_bucket_name}"

  Outputs:
    S3PushUrlPrefix:
      Value: {"Fn::Join": ["", ["s3://", { "Ref" : "S3PushBucket" }, "/${self:custom.s3_prefix_in}"]]}
    S3PushAccessKeyId:
      Value: {"Ref": "S3PushAccessKey"}
    S3PushSecretAccessKey:
      Value: {"Fn::GetAtt": [ "S3PushAccessKey", "SecretAccessKey" ] }

package:
  exclude:
    - "*"
    - "**/*"
  include:
    - "!**/*.pyc"
    - "!**/*~"
